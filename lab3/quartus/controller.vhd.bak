library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity controller is
	generic(command_list := 3);
   port(clk : in std_logic,
		 command: in std_logic_vector (command_list-1 downto 0),
		 
  );
end controller;

architecture statesof of controller is
	
	type state is (clear, blue, teal, green, yellow, white, purple, red, ready);
	signal Current_State : state;
	signal command_hold : state;
	--tells the controller to hold in current state because in the middle of command for certain time
	signal in_command : std_logic;
	-- can hold 32787 clk cycles (clear screen takes 19200)
	signal state_hold_length : unsigned(14 downto 0);
	
	begin
	
	process (all)
		begin
		
		if (not(in_command)) then
			case (Current_State) is
				when clear => 
					command_hold <= clear;
					in_command <= '1';
					state_hold_length <= 
					
				when others => 
					command_hold <= ready;
					in_command <= '0';
					
			end case;
		end if;
	end process;
	
	process (clk)
		begin
		
		if(rising_edge(clk)) then
			case(command_hold) is
				when clear => 
					in
	

	